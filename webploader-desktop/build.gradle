plugins {
    id 'java-library'

}

java {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

sourceSets.main.resources.srcDirs += [ "${buildDir}/natives/outputs" ]

tasks.register("buildNatives") {
    def toolchainsArr
    if(project.hasProperty('toolchains')) {
        toolchainsArr = toolchains.split(',')
    }
    else {
        toolchainsArr = ['host']
    }
    toolchainsArr.each { toolchain ->
        doLast{
            def toolchainFile = rootProject.file(toolchain)
            def toolchainName = toolchain == "host" ? "host" : toolchainFile.name - ".cmake"
            def outputPath = "${buildDir}/natives/${toolchainName}"
            mkdir outputPath
            exec {

                workingDir outputPath
                def cmake = "cmake"
                def sourceDir = "${rootProject.projectDir}/webploader-android/src/main/cpp/"
                def className = '-DJAVA_CLASS_NAME=com_github_zumikua_webploader_desktop_DesktopNativeInterface'
                def jniHeaderDir = "-DJNI_HEADER_DIR=${rootProject.projectDir}/jni_headers"
                def toolchainDef = toolchain == 'host' ? "" : "-DCMAKE_TOOLCHAIN_FILE=${toolchainFile.absolutePath}"
                commandLine cmake, "-G", "Ninja", className, jniHeaderDir, toolchainDef, sourceDir
            }
            exec {
                workingDir outputPath
                commandLine "ninja"
            }
            copy {
                from outputPath
                include "*.dll", "*.so", "*.dylib"
                into "${buildDir}/natives/outputs"
            }
        }
    }

}

tasks.register("clearNatives") {
    doLast {
        delete "${buildDir}/natives"
    }
}

clean.dependsOn("clearNatives")

jar.dependsOn("buildNatives")

dependencies {
    api project(":webploader-common")
}